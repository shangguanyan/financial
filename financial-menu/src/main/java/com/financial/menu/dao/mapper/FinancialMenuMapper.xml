<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.financial.menu.dao.FinancialMenuMapper">
  <resultMap id="BaseResultMap" type="com.financial.model.FinancialMenu">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="action" jdbcType="VARCHAR" property="action" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
  </resultMap>

  <resultMap id="menuMap" type="com.financial.model.FinancialMenu">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="action" jdbcType="VARCHAR" property="action" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <collection property="childrens" ofType="com.financial.model.FinancialMenu" column="id"
                select="getMenuByParentId"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, title, action, path, parent_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from financial_menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from financial_menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.financial.model.FinancialMenu">
    insert into financial_menu (id, title, action,
      path, parent_id)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{action,jdbcType=VARCHAR},
      #{path,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.financial.model.FinancialMenu">
    insert into financial_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="action != null">
        action,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.financial.model.FinancialMenu">
    update financial_menu
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        action = #{action,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.financial.model.FinancialMenu">
    update financial_menu
    set title = #{title,jdbcType=VARCHAR},
      action = #{action,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="menuList" resultMap="menuMap">
    SELECT * FROM financial_menu WHERE parent_id = 0 ORDER by id ASC
  </select>

  <select id="getMenuByParentId" resultMap="BaseResultMap">
    SELECT * FROM financial_menu WHERE parent_id = #{id} ORDER BY id ASC
  </select>
</mapper>
